name: summon-platform-CI

on:
  workflow_dispatch:
    inputs:
      TENANTS_NAME:
          description: "The Summon tanent name to which new tag to be deployed. EX: toka-qa"
          required: true
      IMAGE_TAG_VALUE:
          description: "New summon platform tag to be updated"
          required: true
      ACTOR:
          description: "Person who commited in summon platform"
          required: true
    
jobs:
  Build-docker-image:
    name: docker_image
    runs-on: ubuntu-latest
    steps:
      # - name: Setup Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.8.15'

      # - name: check for deploy
      #   if: contains(github.event.head_commit.message, 'deploy')
      #   run: |
      #     DEPLOY=$(echo "${{ github.event.head_commit.message }}" | sed -n 's/.*\[deploy:[[:space:]]*\([^]]*\)].*/\1/p')
      #     echo "DEPLOY=$DEPLOY" >> $GITHUB_ENV

      - name: checkout code
        uses: actions/checkout@v4

      # - name: create PR to deploy latest build to tenant
      #   if: env.DEPLOY != null
      #   uses: actions/checkout@v4
      #   with:
      #     repository: ajinkyak423/actions-poc
      #     path: actions-poc
      #     token: ${{ secrets.MY_GITHUB_ACTION_TOKEN }}

      - name: directory
        run: |
            echo "Current directory: $(pwd)"
            if [ "${{ inputs.PULL-REQUEST-NUMBER }}" == "" ]; then
              echo "TENANTS_NAME is nuLL"
            fi
            ls -ltra
            # python temp.py
            # echo "deploy_tanent_file=${{ env.deploy_tanent_file }}"
            time=$(date)
            echo "time=$time" >> yourfile.txt
            echo "CURRENT_DATE=$(date +'%s')" >> $GITHUB_ENV
            cat yourfile.txt
    
      # - name: update file in poc
      #   if: env.DEPLOY != null    
      #   run: |
      #    postData='{
      #      "ref": "main",
      #      "inputs": {
      #        "TANENT_NAME": "${{ env.DEPLOY }}",
      #        "IMAGE_TAG_VALUE": "1704395230-fd7169ac-jk-car-25367-subscription-addon-mods"
      #      }
      #    }'

      #    curl -X POST \
      #    -d "${postData}" \
      #    -H "Accept: application/vnd.github+json" \
      #    -H "Authorization: Bearer ${{ secrets.MY_GITHUB_ACTION_TOKEN }}" \
      #    -H "X-GitHub-Api-Version: 2022-11-28" \
      #    https://api.github.com/repos/ajinkyak423/actions-poc/actions/workflows/create-pr.yml/dispatches



      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.MY_GITHUB_ACTION_TOKEN }}
          commit-message: Summon version update for ${{ inputs.TENANTS_NAME }}
          committer: ${{ inputs.ACTOR }} <${{ inputs.ACTOR }}@users.noreply.github.com>
          branch: ${{ env.CURRENT_DATE }}-auto-deploy
          delete-branch: true
          title: 'SummonPlatform version change for ${{ inputs.TENANTS_NAME }}'
          labels: "automerge"
          base: "main"
          
      # - name: Wait for PR to be ready
      #   run: |
      #     status=""
      #     retry_count=6
      #     while [[ "$status" != "clean" ]]; do
      #       sleep 10
      #       status=$(curl -sS -H "Accept: application/vnd.github.v3+json" -u ridecell-github-action:${{ secrets.MY_GITHUB_ACTION_TOKEN }} https://api.github.com/repos/ajinkyak423/actions-poc/pulls/${{ steps.cpr.outputs.pull-request-number }} | jq '.mergeable_state' | tr -d '"')
      #       if [[ $status -eq "behind" ]]; then
      #         git config user.name "Update branch"
      #         git config user.email github-actions@github.com
      #         git checkout ${{ env.CURRENT_DATE }}-auto-deploy
      #         git merge main --no-edit -m "Merged main branch on $(date +%F)"
      #         git push origin ${{ env.CURRENT_DATE }}-auto-deploy
      #       fi
      #       echo $status
      #       # ((retry_count--))
      #     done
    
      # it has auto-update for the branch. Default option is merge for auto-update branch.
      - name: Enable automerge
        shell: bash
        run: |
          # gh pr merge -R "${{ github.repository }}" --squash --auto "${{ steps.cpr.outputs.pull-request-number }}"
          auto_merge_status=$(curl -X PATCH \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/ajinkyak423/actions-poc/pulls/${{ steps.cpr.outputs.pull-request-number }} \
          -d '{"auto_merge": true}' \
          | jq '.auto_merge' \
          | tr -d '"')
          echo "auto_merge_status=$auto_merge_status"

      # - name: Update PR Branch
      #   uses: adRise/update-pr-branch@v0.7.0
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     base: 'main'
      #     required_approval_count: 1
          
      # - name: PR Merge status
      #   run: |
      #     merged_status=$(curl -sS -H "Accept: application/vnd.github.v3+json" -u ridecell-github-action:${{ secrets.GITHUB_TOKEN }} https://api.github.com/repos/Ridecell/kubernetes-summon/pulls/${{ steps.cpr.outputs.pull-request-number }} | jq '.merged' | tr -d '"')
      #     echo "merged_status=$merged_status"