# This workflow is triggered by repositories calling its webhook
# and creates a PR against that repository. This addresses issues in workflows
# that need a different actor (and not GITHUB_TOKEN) to be able to create a PR
# and trigger the necessary branch checks/workflows.


name: Create PR on behalf of Workflows
on:
  workflow_dispatch:
    inputs:
      REPOSITORY:
        description: 'The Ridecell repository where PR should be created, in the format Ridecell/{repo_name}'
        required: true
      REF:
        description: 'The desired branch/tag/sha to merge into main/master'
        required: true
      TITLE:
        description: 'Title for the Pull Request'
        required: true
      BODY:
        description: 'Text body for the Pull Request'
        required: false
        default: ''
      SLACK_CHANNEL:
        description: 'Slack channel to be notified of PR creation'
        required: false
        default: 'devops-eng-private'

jobs:
  create-pr:
    runs-on: ubuntu-latest
    name: Create Pull Request

    steps:
    - name: Display Workflow Inputs
      run: |
        echo '${{ toJSON(github.event.inputs) }}'

    - name: Format inputs for postdata body
      id: post-body
      run: |
        # It seems although input BODY was received in JSON format (e.g. newlines escaped),
        # the escaped values gets converted. Hence, we need to format it to JSON again for
        # building our postData body in the next step.
        
        echo PR_BODY=${{ toJSON(inputs.BODY) }} >> $GITHUB_OUTPUT

    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.MY_GITHUB_ACTION_TOKEN }}
        repository : ${{inputs.REPOSITORY}}
        base: main
        head: ${{github.sha}}
        commit-message: Update report
        title: ${{ inputs.TITLE }}
        body: ${{ inputs.BODY }}
        labels: |
          report
          automated pr

    - name: Notify Devops of PR
      id: slack-notify
      uses: sonots/slack-notice-action@v3
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      with:
        username: GithubActions
        status: custom
        payload: |
            {
                "channel": "#${{ inputs.SLACK_CHANNEL }}",
                "text": "New version available \nAutomated Pull Request Created",
                "blocks": [
                {
                    "type": "header",
                    "text": {
                    "type": "plain_text",
                    "text": "New version availabl"
                    }
                }
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Pull Request*:\n${{ inputs.TITLE }}>"
                  }
                }
              ]
            }
